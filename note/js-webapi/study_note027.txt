1.addEventListener()和attachEvent()的总结
    1.相同点
        1.都可以为元素绑定事件
    2.不同点
        1.参数个数不同
        2.addEventListener：google、firefox支持，IE8不支持；attachEvent()：google、firefox不支持，IE8支持
        3.this不同，前者是当前绑定事件的对象，后者是window
2.解绑事件
    1.对象.事件名=null;
    2.removeEventListener()中的函数需要是命名函数，其对应的addEventListener()也需命名函数
    3.detachEvent()中函数也必须是命名函数，其对应的attachEvent()也需命名函数
3.事件冒泡
    1.多个元素嵌套，有层次关系，这些元素都注册了相同事件，如果里面的事件触发了，那么外面元素事件自动触发了
    2.阻止事件冒泡
        1.window.event.cancelBubble=true，IE特有
        2.e.stopPropagation()，google、firefox支持
    3.通过e.eventPhase可以知道当前事件所处阶段
        1.1=============>捕获阶段
        2.2=============>目标阶段
        3.3=============>冒泡阶段
        4.一般都是冒泡阶段，很少使用捕获阶段
4.BOM
    1.window.onload：页面加载后才触发
    2.window.onunload：页面关闭后才触发，IE才有
    3.window.onbeforeunload：页面关闭之前触发，IE才有
    4.location对象
        1.window.location.hash
            1.获取地址栏#号及其后面的内容
        2.window.location.host
            1.获取主机名及端口号
        3.window.location.hostname
            1.获取主机名
        4.window.location.pathname
            1.获取当前文件的相对路径
        5.window.location.port
            1.获取端口号
        6.window.location.protocol
            1.获取网站协议
        7.window.location.search
            1.获取搜索的内容
    5.location属性及方法
        1.location.href--------------->非常重要
            1.设置跳转的页面地址
        2.location.assign(网址)
            1.效果同href属性
        3.location.reload()
            1.刷新重新加载
        4.location.replace(网址)
            1.直接替换当前页面，不可后退（无历史记录）
    6.history对象
        1.history.back()
            1.有历史记录的时候后退
        2.history.forward()
            1.有历史记录的前进
        3.history.go(num)
            1.num是正数则是前进，负数是后退
    7.navigator对象
        1.navigator.platform
            1.获取浏览器所在系统平台类型
        2.navigator.userAgent
            1.获取浏览器的版本信息
    8.定时器
        1.setInterval(arg1,arg2)
            1.arg1是一个函数
            2.arg2是一个时间，这个时间是一个毫秒数
            3.每隔arg2执行一次arg1
        2.window.clearInterval(arg1)
            1.arg1是一个定时器的id，这个id是setInterval()函数的一个返回值
5.补充
    1.arr.includes(arg)：判断一个数组中是否包含一个元素